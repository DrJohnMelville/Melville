<UserControl x:Class="Melville.Wpf.Samples.FileOperations.MonitoredCopyView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Melville.Wpf.Samples.FileOperations"
             xmlns:easyGrids="clr-namespace:Melville.WpfControls.EasyGrids;assembly=Melville.WpfControls"
             xmlns:eventBindings="clr-namespace:Melville.MVVM.Wpf.EventBindings;assembly=Melville.MVVM.Wpf"
             xmlns:wpfHacks="clr-namespace:Melville.MVVM.Wpf.WpfHacks;assembly=Melville.MVVM.Wpf"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">
    <easyGrids:EasyGrid easyGrids:GridOperations.ColsAndRows="auto, *,auto / auto, auto, auto, auto"
                        Margin="10">
        <TextBlock> Source</TextBlock>
        <TextBox IsReadOnly="True" Text="{Binding Source.Path, Mode=OneWay}"></TextBox>
        <Button Content="..." Click="{eventBindings:EventBinding OpenSource}" />
        <TextBlock>Destination</TextBlock>
        <TextBox IsReadOnly="True" Text="{Binding Destination.Path, Mode=OneWay}"></TextBox>
        <Button Content="..." Click="{eventBindings:EventBinding OpenDest}" />
        <Grid Grid.ColumnSpan="3" Margin="20">
            <Button IsEnabled="{Binding CanCopy}" 
                    wpfHacks:VisibilityHack.CollapseIf="{Binding IsCopying}"
                    Click="{eventBindings:EventBinding DoCopy}">Copy !</Button>
            <Button wpfHacks:VisibilityHack.CollapseUnless="{Binding IsCopying}"
                    Click="{eventBindings:EventBinding DoCancel}">Cancel !</Button>
        </Grid>
        <ProgressBar Grid.ColumnSpan="3" Maximum="1" Value="{Binding Progress}" Height="5"  />
    </easyGrids:EasyGrid>
</UserControl>